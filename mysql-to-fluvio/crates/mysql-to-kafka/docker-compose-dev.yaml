# works in docker with --net cats_default and broker cats-kafka-1:9092 (only from within the docker network )

version: '2'
services:

  zookeeper:
    image: quay.io/debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    ports:
      - 9092:9092
      - 9094:9094
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ALLOW_PLAINTEXT_LISTENER:"yes"
      - KAFKA_LISTENERS:FROM_DOCKER_NETWORK://cats-kafka-1:9092,FROM_HOST://localhost:9094
      - KAFKA_ADVERTISED_LISTENERS:FROM_DOCKER_NETWORK://cats-kafka-1:9092,FROM_HOST://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:PLAINTEXT:PLAINTEXT,FROM_DOCKER_NETWORK:PLAINTEXT,FROM_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME:FROM_DOCKER_NETWORK
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE:"false"

  mysql:
    image: mysql-kafka-gp
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=vg4Vax5biF1u62nbiNsmzZ34Ww3gsIsAiovTow3A
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=vg4Vax5biF1u62nbiNsmzZ34Ww3gsIsAiovTow3A

  connect:
    image: quay.io/debezium/connect:${DEBEZIUM_VERSION}
    ports:
      - 8083:8083
    links:
      - kafka
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses

  rust-client:
    build: /Users/glp/db/dev/infinyon/kafka-client-rust
    links:
      - kafka


